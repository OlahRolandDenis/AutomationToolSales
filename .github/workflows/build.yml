name: Build Sales App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executable
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --console --name=SalesApp --add-data="utils/logo.png;utils" --hidden-import=customtkinter --hidden-import=CTkMessagebox --hidden-import=tkinter --hidden-import=tkinter.ttk --hidden-import=tkinter.messagebox --hidden-import=tkinter.filedialog --hidden-import=sqlite3 --hidden-import=bcrypt --hidden-import=bcrypt._bcrypt --hidden-import=datetime --hidden-import=reportlab --hidden-import=reportlab.lib --hidden-import=reportlab.lib.pagesizes --hidden-import=reportlab.lib.styles --hidden-import=reportlab.lib.units --hidden-import=reportlab.lib.colors --hidden-import=reportlab.lib.enums --hidden-import=reportlab.pdfbase --hidden-import=reportlab.pdfgen --hidden-import=reportlab.platypus --hidden-import=os --hidden-import=sys --hidden-import=random --hidden-import=tempfile --hidden-import=subprocess --hidden-import=platform --collect-all=customtkinter --collect-all=reportlab --collect-all=bcrypt main.py
        
    - name: Build macOS executable
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --console --name=SalesApp --add-data="utils/logo.png:utils" --hidden-import=customtkinter --hidden-import=CTkMessagebox --hidden-import=tkinter --hidden-import=tkinter.ttk --hidden-import=tkinter.messagebox --hidden-import=tkinter.filedialog --hidden-import=sqlite3 --hidden-import=bcrypt --hidden-import=bcrypt._bcrypt --hidden-import=datetime --hidden-import=reportlab --hidden-import=reportlab.lib --hidden-import=reportlab.lib.pagesizes --hidden-import=reportlab.lib.styles --hidden-import=reportlab.lib.units --hidden-import=reportlab.lib.colors --hidden-import=reportlab.lib.enums --hidden-import=reportlab.pdfbase --hidden-import=reportlab.pdfgen --hidden-import=reportlab.platypus --hidden-import=os --hidden-import=sys --hidden-import=random --hidden-import=tempfile --hidden-import=subprocess --hidden-import=platform --collect-all=customtkinter --collect-all=reportlab --collect-all=bcrypt main.py
        
    - name: Upload Windows artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: SalesApp-Windows
        path: dist/SalesApp.exe
        
    - name: Upload macOS artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: SalesApp-macOS
        path: dist/SalesApp
        
    - name: Create Release
      if: github.event_name == 'push' && matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          dist/SalesApp.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}